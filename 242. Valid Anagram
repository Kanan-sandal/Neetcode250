class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false;
        sort(s.begin(),s.end());
        sort(t.begin(),t.end());
        return s==t;
    }
};


class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false;
        vector<int> count(26,0);
        for(char c:s) count[c-'a']++;
        for(char c:t) count[c-'a']--;
        for(int val:count){
            if(val!=0) return false;
        }
        return true;
    }
};




class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.size()!=t.size()) return false;
        unordered_map<char,int> mp;
        for(char c:s) mp[c]++;
        for(char c:t){
            if(--mp[c]<0) return false;
        }
        return true;
    }
};
